name: UC-10-Focal-Board-Using-Docker

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
  tflint:
    name: TFLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.48.0

      - name: Run TFLint with AWS plugin
        run: |
          tflint --init --config .tflint.hcl
          tflint
        continue-on-error: true
      
      - name: Install Checkov
        run: |
          pip3 install --upgrade pip
          pip3 install checkov

      - name: Run Checkov
        run: checkov -d . --framework terraform --soft-fail
        working-directory: ./


  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: tflint  # Changed from 'lint-checks' to 'tflint'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::994466158061:role/OIDC-Github-action
          aws-region: us-west-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TF_VERSION }}
          terraform_wrapper: false

      - name: Setup OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/v0.58.0/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan.binary
          terraform show -json tfplan.binary > tfplan.json

      - name: Run OPA Validation
        run: |
          opa eval --format pretty --data terraform/terraform_policies.rego --input tfplan.json "data.terraform.policies"

      - name: Terraform Test
        id: test
        run: terraform test
        continue-on-error: true

      - name: Terraform Plan (for PR comment)
        id: plan
        run: |
          terraform plan -no-color > plan.txt 2> debug.log
          cat plan.txt
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          cat plan.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Inject Terraform Plan into README.md
        run: |
          echo -e "\n## Terraform Plan Output\n" >> README.md
          cat plan.txt >> README.md

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install terraform-docs
        run: |
          curl -sSLo terraform-docs.tar.gz https://terraform-docs.io/dl/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          sudo mv terraform-docs /usr/local/bin/

      - name: Generate-directory
        if: github.event.pull_request.head.repo.full_name == github.repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        run: |
          git config --local user.email "devops979@gmail.com"
          git config --local user.name "devops979"
          git fetch origin ${{ github.head_ref }}
          git checkout ${{ github.head_ref }}
          git remote set-url origin https://${{ github.actor }}:${GITHUBTOKEN}@github.com/${{ github.repository }}
          terraform-docs markdown . > README.md.new
          mv README.md.new README.md
          if [ -f README.md ]; then
            git add README.md
            git diff --cached --quiet && echo "No changes to commit" || git commit -m "docs(terraform): Update README.md via terraform-docs"
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "README.md was not generated."
          fi 
      - name: Update Pull Request with Terraform Plan
        uses: actions/github-script@v7
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUBTOKEN }}
          script: |
            const plan = process.env.PLAN || "No plan output available.";
            const output = [
              "#### Terraform Format and Style ",
              "#### Terraform Initialization ",
              "#### Terraform Validation ",
              "#### Terraform Plan ðŸ“„",
              "",
              "<details><summary>Show Plan</summary>",
              "",
              "```hcl",
              plan,
              "```",
              "",
              "</details>",
              "",
              `*Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`
            ].join('\n');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve